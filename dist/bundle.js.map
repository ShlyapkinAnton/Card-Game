{"version":3,"file":"bundle.js","mappings":"mBAAA,IAAIA,EAAe,EACfC,EAAU,EACVC,EAAU,EACVC,EAAW,EAkBR,SAASC,IACZC,cAAcF,GACdH,EAAe,EACfC,EAAU,EACVC,EAAU,CACd,CCxBA,IAAII,EAAQC,SAASC,eAAe,OAChCC,EAAW,EACXC,EAAQ,EACRC,EAAO,EACXC,QAAQC,IAAI,UAAWJ,EAAU,IAAK,SAAUC,EAAO,IAAK,QAASC,GACrE,IAAIG,EAAM,CACN,YACA,aACA,cACA,aACA,WACA,UACA,UACA,UACA,UACA,YACA,aACA,cACA,aACA,WACA,UACA,UACA,UACA,UACA,cACA,eACA,gBACA,eACA,aACA,YACA,YACA,YACA,YACA,WACA,YACA,aACA,YACA,UACA,SACA,SACA,SACA,UAEAC,EAAO,GAEX,SAASC,IAELV,EAAMW,UADU,2YAEGV,SAASW,iBAAiB,SAChCC,SAAQ,SAAUC,GAC3BA,EAAYC,iBAAiB,SAAS,SAAUC,GAC5C,GAAIA,EAAMC,kBAAkBC,YAAa,CACrC,IAAIC,EAAUH,EAAMC,OAAOG,QAAQC,OAAS,GAE3B,KADjBlB,EAAWmB,SAASH,IAGhBb,QAAQC,IAAI,UADK,GAGC,IAAbJ,EAELG,QAAQC,IAAI,UADK,GAGC,IAAbJ,GAELG,QAAQC,IAAI,UADK,EAGzB,CACJ,GACJ,IAuBkBN,SAASsB,cAAc,WAC7BR,iBAAiB,SAAS,YAtBtC,SAAeZ,GACX,IAAIqB,EAAW,EACE,IAAbrB,EACAqB,EAAW,EAEO,IAAbrB,EACLqB,EAAW,EAEO,IAAbrB,IACLqB,EAAW,GAEflB,QAAQC,IAAI,gBAAiBiB,GAC7BhB,EAAIiB,MAAK,WAAc,OAAOC,KAAKC,SAAW,EAAK,KACnDnB,EAAMA,EAAIoB,MAAM,EAAGJ,IACfX,SAAQ,SAAUgB,GAAM,OAAOrB,EAAIsB,KAAKD,EAAK,IACjDrB,EAAIiB,MAAK,WAAc,OAAOC,KAAKC,SAAW,EAAK,IACnDlB,EAAOD,EAAIuB,KAAI,SAAUC,EAASC,GAC9B,MAAO,CAACA,EAAOD,EACnB,IACA1B,QAAQC,IAAI,aAAcE,EAC9B,CAGIyB,CAAM/B,GACNL,IACAqC,GAAW,GAkKfC,YAAW,WACPD,GAAW,GACKlC,SAASW,iBAAiB,iBAChCC,SAAQ,SAAUwB,GAAY,ODlQrBC,ECkQuCD,ODjQ9DxC,EAAW0C,aAAY,WAEE,OADrB7C,GAAgB,MAEZA,EAAe,EAEC,MADhBC,IAEIA,EAAU,EAEM,MADhBC,IAEIA,EAAU,KAItB0C,EAAK3B,UAAY,GAAG6B,QAAQ5C,EAAU,GAAK,IAAMA,EAAUA,GAAW,KAAOD,EAAU,GAAK,IAAMA,EAAUA,GAChH,GAAG,KAfA,IAAoB2C,CCkQkD,IAC3DrC,SAASC,eAAe,OAC9BuC,MAAMC,cAAgB,OAC1BpC,QAAQC,IAAI,QAChB,GAAG,KAvKCD,QAAQC,IAAI,+BAAgCJ,EAChD,GACJ,CAGA,SAASgC,EAAWQ,GAChB,IAAIC,EAAYnC,EACXsB,KAAI,SAAUc,GAEf,MAAO,YAAaL,OAAOK,EAAK,GAAI,qDAA2DL,OAAOK,EAAK,GAAI,iBAAmBL,OAAOK,EAAK,GAAI,yCACtJ,IACKC,KAAK,IACNC,EAAgBtC,EACfsB,KAAI,SAAUc,GACf,MAAO,YAAaL,OAAOK,EAAK,GAAI,qDAA2DL,OAAOK,EAAK,GAAI,iBAAmBL,OAAOK,EAAK,GAAI,mBAAqBL,OAAOK,EAAK,GAAI,sBAC3L,IACKC,KAAK,IACNE,EAAW,wYAAkdR,OAAOG,EAAQC,EAAYG,EAAe,4EAK3gB,SAASE,EAAUC,GACf,IAAIC,EACAC,EAA0D,QAAlDD,EAAKlD,SAASsB,cAAc,wBAAqC,IAAP4B,OAAgB,EAASA,EAAGxC,UAC9F0C,EAAU,4HAAmIb,OAAOU,EAAQ,UAAY,WAAY,0DAA+DV,OAAOU,EAAQ,eAAiB,gBAAiB,sGAA0LV,OAAOY,EAAM,2HACjenD,SAASC,eAAe,WAC9BS,UAAY0C,EACpBC,IACAxD,GACJ,CAZAE,EAAMW,UAAYqC,EACR/C,SAASC,eAAe,OAC9BuC,MAAMC,cAAgB,OAY1B,IAAIY,EAAa,WACOrD,SAASW,iBAAiB,iBAChCC,SAAQ,SAAU0C,GAC5BA,EAAaxC,iBAAiB,SAAS,WACnCP,EAAM,CACF,YACA,aACA,cACA,aACA,WACA,UACA,UACA,UACA,UACA,YACA,aACA,cACA,aACA,WACA,UACA,UACA,UACA,UACA,cACA,eACA,gBACA,eACA,aACA,YACA,YACA,YACA,YACA,WACA,YACA,aACA,YACA,UACA,SACA,SACA,SACA,UAEJV,IACAK,EAAW,EACXE,EAAO,EACPD,EAAQ,EACRM,IACAJ,QAAQC,IAAI,yBAA0BJ,EAAU,IAAK,SAAUC,EAAO,IAAK,QAASC,EACxF,GACJ,GACJ,EACAiD,IAEA,IAAIE,EAAoBvD,SAASW,iBAAiB,qBAC9C6C,EAAgB,GAChBC,EAAY,GAChBF,EAAkB3C,SAAQ,SAAU8C,GAChCA,EAAiB5C,iBAAiB,SAAS,SAAUC,GACjD,GAAIA,EAAMC,kBAAkBC,YAAa,CACrC,IAAI0C,EAAS5C,EAAMC,OAAOG,QAAQyC,MAAQ,GACtCC,EAAK9C,EAAMC,OAAO6C,GACtBH,EAAiBI,aAAa,MAAO,UAAUvB,OAAOoB,EAAQ,SAC9DF,EAAU5B,KAAKgC,GACfL,EAAc3B,KAAK8B,GACM,IAArBF,EAAUM,QAAyC,IAAzBP,EAAcO,SACpCN,EAAU,KAAOA,EAAU,GACvBD,EAAc,KAAOA,EAAc,IACnCrD,GAAgB,EAChBC,IAASA,EACTqD,EAAY,GACZD,EAAgB,KAGhBpD,IAASA,EACT+B,YAAW,WACPoB,EAAkB3C,SAAQ,SAAU8C,GAChCA,EAAiBI,aAAa,MAAO,kBACzC,IACAzD,QAAQC,IAAI,UAChB,GAAG,KACHmD,EAAY,GACZD,EAAgB,IAGfC,EAAU,KAAOA,EAAU,KAChCD,EAAcQ,QACdP,EAAUO,SAId3D,QAAQC,IAAI,SAAUH,EAAO,QAASC,GACrB,IAAbF,EACa,IAATE,GAAwB,IAAVD,IACA,IAAVA,EACA6C,GAAU,GAEL7C,GAAS,GACd6C,GAAU,IAIA,IAAb9C,EACQ,IAATE,GAAwB,IAAVD,GAEV6C,EADU,IAAV7C,GAQU,IAAbD,IACQ,IAATE,GAAwB,IAAVD,GAEV6C,EADU,IAAV7C,IASpB,CACJ,GACJ,GACJ,CA1JAM,G","sources":["webpack://card-game/./watch.ts","webpack://card-game/./index.ts"],"sourcesContent":["var milliseconds = 0;\nvar seconds = 0;\nvar minutes = 0;\nvar interval = 0;\nexport function startTimer(html) {\n    interval = setInterval(function () {\n        milliseconds += 10;\n        if (milliseconds === 1000) {\n            milliseconds = 0;\n            seconds++;\n            if (seconds === 60) {\n                seconds = 0;\n                minutes++;\n                if (minutes === 60) {\n                    minutes = 0;\n                }\n            }\n        }\n        html.innerHTML = \"\".concat((minutes < 10 ? \"0\" + minutes : minutes) + \".\" + (seconds < 10 ? \"0\" + seconds : seconds));\n    }, 10);\n}\nexport function stopTimer() {\n    clearInterval(interval);\n    milliseconds = 0;\n    seconds = 0;\n    minutes = 0;\n}\n","import \"./styles.css\";\nimport { startTimer, stopTimer } from \"./watch\";\nvar appEl = document.getElementById(\"app\");\nvar numLevel = 1;\nvar score = 0;\nvar step = 0;\nconsole.log(\"Level :\", numLevel, \";\", \"Счет :\", score, \";\", \"Ход :\", step);\nvar arr = [\n    \"AceSpades\",\n    \"KingSpades\",\n    \"QueenSpades\",\n    \"JackSpades\",\n    \"10Spades\",\n    \"9Spades\",\n    \"8Spades\",\n    \"7Spades\",\n    \"6Spades\",\n    \"AceHearts\",\n    \"KingHearts\",\n    \"QueenHearts\",\n    \"JackHearts\",\n    \"10Hearts\",\n    \"9Hearts\",\n    \"8Hearts\",\n    \"7Hearts\",\n    \"6Hearts\",\n    \"AceDiamonds\",\n    \"KingDiamonds\",\n    \"QueenDiamonds\",\n    \"JackDiamonds\",\n    \"10Diamonds\",\n    \"9Diamonds\",\n    \"8Diamonds\",\n    \"7Diamonds\",\n    \"6Diamonds\",\n    \"AceClubs\",\n    \"KingClubs\",\n    \"QueenClubs\",\n    \"JackClubs\",\n    \"10Clubs\",\n    \"9Clubs\",\n    \"8Clubs\",\n    \"7Clubs\",\n    \"6Clubs\",\n];\nvar arr2 = [];\n// Рендер уровня сложности + выбор уровня сложности и запуск игры\nfunction renderLevel() {\n    var levelHtml = \"<div class=\\\"top center\\\">\\n    <div class=\\\"window\\\">\\n        <h1 class=\\\"header\\\">\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C</h1>\\n        <div class=\\\"cards\\\">\\n            <button data-level=\\\"1\\\" class=\\\"card\\\">1</button>\\n            <button data-level=\\\"2\\\" class=\\\"card\\\">2</button>\\n            <button data-level=\\\"3\\\" class=\\\"card\\\">3</button>\\n        </div>\\n        <button class=\\\"button\\\">\\u0421\\u0442\\u0430\\u0440\\u0442</button>\\n    </div>\\n</div>\";\n    appEl.innerHTML = levelHtml;\n    var levelButtons = document.querySelectorAll(\".card\");\n    levelButtons.forEach(function (levelButton) {\n        levelButton.addEventListener(\"click\", function (event) {\n            if (event.target instanceof HTMLElement) {\n                var dataSet = event.target.dataset.level || \"\";\n                numLevel = parseInt(dataSet);\n                if (numLevel === 1) {\n                    var numLevel_1 = 1;\n                    console.log(\"Level :\", numLevel_1);\n                }\n                else if (numLevel === 2) {\n                    var numLevel_2 = 2;\n                    console.log(\"Level :\", numLevel_2);\n                }\n                else if (numLevel === 3) {\n                    var numLevel_3 = 3;\n                    console.log(\"Level :\", numLevel_3);\n                }\n            }\n        });\n    });\n    // Определение кол-во карт на поле и рандомизация колоды\n    function start(numLevel) {\n        var numCards = 6;\n        if (numLevel === 1) {\n            numCards = 3;\n        }\n        else if (numLevel === 2) {\n            numCards = 6;\n        }\n        else if (numLevel === 3) {\n            numCards = 9;\n        }\n        console.log(\"Кол-во карт :\", numCards);\n        arr.sort(function () { return Math.random() - 0.5; });\n        arr = arr.slice(0, numCards); // урезать массив в 2 раза\n        arr.forEach(function (el) { return arr.push(el); });\n        arr.sort(function () { return Math.random() - 0.5; }); // массив рандом кард 6 12 18\n        arr2 = arr.map(function (element, index) {\n            return [index, element];\n        });\n        console.log(\"массив пар\", arr2); //[[\"id\",\"name\"],[\"id\",\"name\"]]\n    }\n    var startButton = document.querySelector(\".button\");\n    startButton.addEventListener(\"click\", function () {\n        start(numLevel);\n        stopTimer();\n        renderGame(false);\n        ints();\n        console.log(\"Играть на уровне сложности :\", numLevel);\n    });\n}\nrenderLevel();\n//Рендер игрового поля и повторный запуск игры\nfunction renderGame(isAct) {\n    var cardsHtml = arr2\n        .map(function (back) {\n        //рубашки карт\n        return \"<div id=\\\"\".concat(back[0], \"\\\" class=\\\"back\\\"><img class=\\\"playingFieldCard\\\" id=\\\"\").concat(back[0], \"\\\" data-name=\\\"\").concat(back[1], \"\\\" src=\\\"./cards/back.jpg\\\" alt=\\\"\\\"></div>\");\n    })\n        .join(\"\");\n    var cardsBackHtml = arr2\n        .map(function (back) {\n        return \"<div id=\\\"\".concat(back[0], \"\\\" class=\\\"back\\\"><img class=\\\"playingFieldCard\\\" id=\\\"\").concat(back[0], \"\\\" data-name=\\\"\").concat(back[1], \"\\\" src=\\\"./cards/\").concat(back[1], \".jpg\\\" alt=\\\"\\\"></div>\");\n    })\n        .join(\"\");\n    var gameHtml = \"\\n    <div class=\\\"playingField center\\\">\\n        <div class=\\\"playingFieldHeader\\\">\\n            <div class=\\\"timeBox\\\">\\n                <h1 class=\\\"time timerDisplay\\\">00.00</h1>\\n            </div>\\n            <div>\\n                <button class=\\\"button returnButton\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n            </div>\\n        </div>\\n        <div id=\\\"css\\\" class=\\\"playingFieldCards\\\">\\n            \".concat(isAct ? cardsHtml : cardsBackHtml, \"\\n        </div>\\n    </div>\\n    <div id=\\\"addHtml\\\" class=\\\"imgBg\\\"></div>\");\n    appEl.innerHTML = gameHtml;\n    var css = document.getElementById(\"css\");\n    css.style.pointerEvents = \"none\";\n    // Рендер результата\n    function renderWin(isWin) {\n        var _a;\n        var time = (_a = document.querySelector(\".timerDisplay\")) === null || _a === void 0 ? void 0 : _a.innerHTML;\n        var winHtml = \"\\n        <div class=\\\"img\\\"></div>\\n        <div class=\\\"winLose center\\\">\\n            <img class=\\\"imgHeader\\\" src=\\\"./cards/\".concat(isWin ? \"win.png\" : \"lose.png\", \"\\\" alt=\\\"winORlose\\\">\\n            <h1 class=\\\"headerLow\\\">\").concat(isWin ? \"Вы выиграли!\" : \"Вы проиграли!\", \"</h1>\\n            <h3 class=\\\"heading\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F:</h3>\\n            <p class=\\\"timeHeader\\\">\").concat(time, \"</p>\\n            <button style=\\\"margin-bottom: 48px\\\" class=\\\"button returnButton\\\">\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430</button>\\n        </div>\");\n        var addHtml = document.getElementById(\"addHtml\");\n        addHtml.innerHTML = winHtml;\n        returnGame();\n        stopTimer();\n    }\n    //Кнопка повторной игры и сброс значей\n    var returnGame = function () {\n        var returnButtons = document.querySelectorAll(\".returnButton\");\n        returnButtons.forEach(function (returnButton) {\n            returnButton.addEventListener(\"click\", function () {\n                arr = [\n                    \"AceSpades\",\n                    \"KingSpades\",\n                    \"QueenSpades\",\n                    \"JackSpades\",\n                    \"10Spades\",\n                    \"9Spades\",\n                    \"8Spades\",\n                    \"7Spades\",\n                    \"6Spades\",\n                    \"AceHearts\",\n                    \"KingHearts\",\n                    \"QueenHearts\",\n                    \"JackHearts\",\n                    \"10Hearts\",\n                    \"9Hearts\",\n                    \"8Hearts\",\n                    \"7Hearts\",\n                    \"6Hearts\",\n                    \"AceDiamonds\",\n                    \"KingDiamonds\",\n                    \"QueenDiamonds\",\n                    \"JackDiamonds\",\n                    \"10Diamonds\",\n                    \"9Diamonds\",\n                    \"8Diamonds\",\n                    \"7Diamonds\",\n                    \"6Diamonds\",\n                    \"AceClubs\",\n                    \"KingClubs\",\n                    \"QueenClubs\",\n                    \"JackClubs\",\n                    \"10Clubs\",\n                    \"9Clubs\",\n                    \"8Clubs\",\n                    \"7Clubs\",\n                    \"6Clubs\",\n                ];\n                stopTimer();\n                numLevel = 1;\n                step = 0;\n                score = 0;\n                renderLevel();\n                console.log(\"Играть заново. Level :\", numLevel, \";\", \"Счет :\", score, \";\", \"Ход :\", step);\n            });\n        });\n    };\n    returnGame();\n    //Поиск пары карт\n    var playingFieldCards = document.querySelectorAll(\".playingFieldCard\");\n    var compareNameId = [];\n    var compareId = [];\n    playingFieldCards.forEach(function (playingFieldCard) {\n        playingFieldCard.addEventListener(\"click\", function (event) {\n            if (event.target instanceof HTMLElement) {\n                var nameId = event.target.dataset.name || \"\";\n                var id = event.target.id;\n                playingFieldCard.setAttribute(\"src\", \"/cards/\".concat(nameId, \".jpg\"));\n                compareId.push(id);\n                compareNameId.push(nameId);\n                if (compareId.length === 2 && compareNameId.length === 2) {\n                    if (compareId[0] !== compareId[1]) {\n                        if (compareNameId[0] === compareNameId[1]) {\n                            score = score + 1;\n                            step = ++step;\n                            compareId = [];\n                            compareNameId = [];\n                        }\n                        else {\n                            step = ++step;\n                            setTimeout(function () {\n                                playingFieldCards.forEach(function (playingFieldCard) {\n                                    playingFieldCard.setAttribute(\"src\", \"/cards/back.jpg\");\n                                });\n                                console.log(\"Очистка\");\n                            }, 500);\n                            compareId = [];\n                            compareNameId = [];\n                        }\n                    }\n                    else if (compareId[0] === compareId[1]) {\n                        compareNameId.shift();\n                        compareId.shift();\n                    }\n                    // Окно результата\n                    // записывать все пары сравнивыемых карт в общий масив, при достижение нужной длинны массива сравнить с уровнем игры и выдать результат, если при сравнение первой пары не было допусщина ошибка\n                    console.log(\"Счет :\", score, \"Ход :\", step);\n                    if (numLevel === 1) {\n                        if (step === 5 || score === 3) {\n                            if (score === 3) {\n                                renderWin(true);\n                            }\n                            else if (score <= 3) {\n                                renderWin(false);\n                            }\n                        }\n                    }\n                    else if (numLevel === 2) {\n                        if (step === 8 || score === 6) {\n                            if (score === 6) {\n                                renderWin(true);\n                            }\n                            else {\n                                renderWin(false);\n                            }\n                        }\n                    }\n                    else if (numLevel === 3) {\n                        if (step === 9 || score === 9) {\n                            if (score === 9) {\n                                renderWin(true);\n                            }\n                            else {\n                                renderWin(false);\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    });\n}\n// Показать и скрытие карточек через 5 сек в начале игры\nfunction ints() {\n    setTimeout(function () {\n        renderGame(true);\n        var timerRefs = document.querySelectorAll(\".timerDisplay\");\n        timerRefs.forEach(function (timerRef) { return startTimer(timerRef); });\n        var css = document.getElementById(\"css\");\n        css.style.pointerEvents = \"auto\";\n        console.log(\"Старт\");\n    }, 5000);\n}\n"],"names":["milliseconds","seconds","minutes","interval","stopTimer","clearInterval","appEl","document","getElementById","numLevel","score","step","console","log","arr","arr2","renderLevel","innerHTML","querySelectorAll","forEach","levelButton","addEventListener","event","target","HTMLElement","dataSet","dataset","level","parseInt","querySelector","numCards","sort","Math","random","slice","el","push","map","element","index","start","renderGame","setTimeout","timerRef","html","setInterval","concat","style","pointerEvents","isAct","cardsHtml","back","join","cardsBackHtml","gameHtml","renderWin","isWin","_a","time","winHtml","returnGame","returnButton","playingFieldCards","compareNameId","compareId","playingFieldCard","nameId","name","id","setAttribute","length","shift"],"sourceRoot":""}